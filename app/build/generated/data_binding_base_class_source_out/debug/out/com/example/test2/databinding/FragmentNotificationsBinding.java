// Generated by view binder compiler. Do not edit!
package com.example.test2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button2;

  @NonNull
  public final Spinner spinner2;

  @NonNull
  public final Switch switch1;

  @NonNull
  public final Switch switch4;

  @NonNull
  public final Switch switch5;

  @NonNull
  public final TextView textNotifications;

  @NonNull
  public final TextView textView2;

  private FragmentNotificationsBinding(@NonNull ConstraintLayout rootView, @NonNull Button button2,
      @NonNull Spinner spinner2, @NonNull Switch switch1, @NonNull Switch switch4,
      @NonNull Switch switch5, @NonNull TextView textNotifications, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.button2 = button2;
    this.spinner2 = spinner2;
    this.switch1 = switch1;
    this.switch4 = switch4;
    this.switch5 = switch5;
    this.textNotifications = textNotifications;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notifications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.spinner2;
      Spinner spinner2 = ViewBindings.findChildViewById(rootView, id);
      if (spinner2 == null) {
        break missingId;
      }

      id = R.id.switch1;
      Switch switch1 = ViewBindings.findChildViewById(rootView, id);
      if (switch1 == null) {
        break missingId;
      }

      id = R.id.switch4;
      Switch switch4 = ViewBindings.findChildViewById(rootView, id);
      if (switch4 == null) {
        break missingId;
      }

      id = R.id.switch5;
      Switch switch5 = ViewBindings.findChildViewById(rootView, id);
      if (switch5 == null) {
        break missingId;
      }

      id = R.id.textNotifications;
      TextView textNotifications = ViewBindings.findChildViewById(rootView, id);
      if (textNotifications == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentNotificationsBinding((ConstraintLayout) rootView, button2, spinner2,
          switch1, switch4, switch5, textNotifications, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
